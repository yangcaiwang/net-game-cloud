<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gm.server.admin.mapper.ProtocolFileStructFieldMapper">
    
    <resultMap type="ProtocolFileStructField" id="ProtocolFileStructFieldResult">
        <result property="id"    column="id"    />
        <result property="fieldDesc"    column="field_desc"    />
        <result property="fieldTypeDesc"    column="field_type_desc"    />
        <result property="fieldType"    column="field_type"    />
        <result property="fieldName"    column="field_name"    />
        <result property="structName"    column="struct_name"    />
        <result property="fieldValue"    column="field_value"    />
        <result property="fileIndex"    column="file_index"    />
    </resultMap>

    <sql id="selectProtocolFileStructFieldVo">
        select id, field_desc, field_type_desc, field_type, field_name, struct_name, field_value, file_index from protocol_file_struct_field
    </sql>

    <select id="selectProtocolFileStructFieldList" parameterType="ProtocolFileStructField" resultMap="ProtocolFileStructFieldResult">
        <include refid="selectProtocolFileStructFieldVo"/>
        <where>
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="structName != null">
                AND struct_name = #{structName}
            </if>
            <if test="fileIndex != null">
                AND file_index = #{fileIndex}
            </if>
            <if test="fieldName != null">
                AND field_name = #{fieldName}
            </if>
        </where>
    </select>

    <select id="selectProtocolFileStructFieldByName" parameterType="ProtocolFileStructField" resultMap="ProtocolFileStructFieldResult">
        <include refid="selectProtocolFileStructFieldVo"/>
        where field_name in
        <foreach collection="array" item="fieldName" open="(" separator="," close=")">
            #{fieldName}
        </foreach>
    </select>

    <select id="selectProtocolFileStructFieldById" parameterType="Integer" resultMap="ProtocolFileStructFieldResult">
        <include refid="selectProtocolFileStructFieldVo"/>
        where id = #{id}
    </select>

    <insert id="insertProtocolFileStructField" parameterType="ProtocolFileStructField" useGeneratedKeys="true" keyProperty="id">
        insert into protocol_file_struct_field
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fieldDesc != null">field_desc,</if>
            <if test="fieldTypeDesc != null">field_type_desc,</if>
            <if test="fieldType != null">field_type,</if>
            <if test="fieldName != null">field_name,</if>
            <if test="fieldValue != null">field_value,</if>
            <if test="fileIndex != null">file_index,</if>
            <if test="structName != null">struct_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fieldDesc != null">#{fieldDesc},</if>
            <if test="fieldTypeDesc != null">#{fieldTypeDesc},</if>
            <if test="fieldType != null">#{fieldType},</if>
            <if test="fieldName != null">#{fieldName},</if>
            <if test="fieldValue != null">#{fieldValue},</if>
            <if test="fileIndex != null">#{fileIndex},</if>
            <if test="structName != null">#{structName},</if>
         </trim>
    </insert>

    <insert id="insertProtocolFileStructFieldBatch" parameterType="java.util.List">
        insert into protocol_file_struct_field(field_desc, field_type_desc, field_type, field_name, field_value, file_index, struct_name) values
        <foreach collection="fields" item="item" separator=",">
            (#{item.fieldDesc}, #{item.fieldTypeDesc},#{item.fieldType},#{item.fieldName},#{item.fieldValue},#{item.fileIndex},#{item.structName})
        </foreach>
    </insert>

    <select id="selectStructFieldByMoreCondition"  resultMap="ProtocolFileStructFieldResult">
        <include refid="selectProtocolFileStructFieldVo"/>
        where file_index in
        <foreach collection="fieldIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and struct_name in
        <foreach collection="structNames" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <update id="updateProtocolFileStructField" parameterType="ProtocolFileStructField">
        update protocol_file_struct_field
        <trim prefix="SET" suffixOverrides=",">
            <if test="fieldDesc != null">field_desc = #{fieldDesc},</if>
            <if test="fieldTypeDesc != null">field_type_desc = #{fieldTypeDesc},</if>
            <if test="fieldType != null">field_type = #{fieldType},</if>
            <if test="fieldName != null">field_name = #{fieldName},</if>
            <if test="fieldValue != null">field_value = #{fieldValue},</if>
            <if test="fileIndex != null">file_index = #{fileIndex},</if>
            <if test="structName != null">struct_name = #{structName},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateProtocolFileStructFieldBatch" parameterType="ProtocolFileStructField" >
        <foreach collection="fields" item="item" separator=";">
            update protocol_file_struct_field
            <trim prefix="SET" suffixOverrides=",">
                <if test="item.fieldDesc != null">field_desc = #{item.fieldDesc},</if>
                <if test="item.fieldTypeDesc != null">field_type_desc = #{item.fieldTypeDesc},</if>
                <if test="item.fieldType != null">field_type = #{item.fieldType},</if>
                <if test="item.fieldName != null">field_name = #{item.fieldName},</if>
                <if test="item.fieldValue != null">field_value = #{item.fieldValue},</if>
                <if test="item.fileIndex != null">file_index = #{item.fileIndex},</if>
                <if test="item.structName != null">struct_name = #{item.structName},</if>
            </trim>
            where id = #{item.id}
        </foreach>

    </update>

    <delete id="deleteProtocolFileStructFieldById" parameterType="Integer">
        delete from protocol_file_struct_field where id = #{id}
    </delete>

    <delete id="deleteProtocolFileStructFieldByIds" parameterType="Integer">
        delete from protocol_file_struct_field where id in
        <foreach collection="array" item="pid" open="(" separator="," close=")">
            #{pid}
        </foreach>
    </delete>

</mapper>